
1. Система управления библиотекой
 Цель проекта - разработать приложение для управления библиотекой, позволяющее работать с книгами, читателями и учётом выдачи книг.
 Уровень 1: Минимальный
        Задачи:
            Создать консольное приложение.
        Таблицы:
            books (id, название, автор, год выпуска, количество экземпляров).
            authors (id, имя, страна).
            users (id, имя, email, дата регистрации).
            borrow_records (id, id_пользователя, id_книги, дата выдачи, дата возврата).
        CRUD-операции:
            Добавление, удаление и обновление книг, пользователей.
            Выдача книги пользователю.
            Учёт возвратов книг.


 Уровень 2: Средний
        Дополнительные задачи:
            Разработка REST API на Spring Boot:
                Эндпоинты для управления книгами, пользователями и записями о выдачах.
                Валидация данных: проверка email, даты возврата и доступности экземпляров.


 Уровень 3: Максимальный
        Дополнительные задачи:
            Интеграция с брокером сообщений:
                Уведомления пользователей о приближении срока возврата книг.
            Создание микросервиса для автоматического формирования отчётов о:
                Популярности книг.
                Пользователях с максимальным количеством задержек возвратов.
            Реализация авторизации и разграничения ролей (например, администратор и пользователь).
            Веб-интерфейс*:
                Отображение списка книг с возможностью фильтрации по автору, году или названию. Страница пользователя с историей выдачи книг.



Уровень 1: Минимальный
Критерии:
    Работоспособность приложения:
        Все основные функциональности (CRUD-операции) реализованы и работают корректно.
        Подключение к базе данных выполнено успешно, данные корректно сохраняются и извлекаются.
    Качество кода:
        Код соответствует основным принципам чистоты (например, минимальное дублирование, осмысленные названия переменных и методов).
        Отсутствие критических ошибок или багов.
    Работа с базой данных:
        Создана структура базы данных с таблицами, соответствующими требованиям задачи.
        Реализованы связи между таблицами (например, через внешние ключи).
    Документация и инструкции:
        Предоставлены инструкции по запуску приложения.
        Присутствует, хотя бы частично, JavaDoc
    Оценка:
        Проект соответствует минимальным требованиям для получения диплома.
        Оценивается умение применять базовые навыки программирования и работы с базой данных.

Уровень 2: Средний
    Критерии:
        Работоспособность приложения:
            Все функциональности минимального уровня полностью реализованы.
            REST АРІ корректно работает, поддерживает необходимые эндпоинты и возвращает адекватные НТТР-коды.
        Качество кода:
            Используются основные возможности Spring Framework (например, Spring Boot, Spring Data ІРА).
            Код структурирован и разделён на слои (Controller, Service, Repository).
            Валидация входных данных (например, через аннотации Valid) реализована корректно.
        Тестирование:
            Код покрыт тестами не меньше 25 процентов
        Документация и инструкции:
            Предоставлены примеры запросов для работы с АРІ (например, через Postman или Swagger).
            Подробное описание работы приложения (архитектура, настройки).
        Оценка:
            Проект демонстрирует уверенное владение инструментами Java и Spring, а также понимание архитектуры веб-приложений.

Уровень 3: Максимальный
    Критерии:
        Работоспособность приложения:
            Все функциональности минимального и среднего уровней полностью реализованы.
            Приложение интегрировано с брокером сообщений (например, Kafka или RabbitMQ).
            Сообщения корректно отправляются, принимаются и обрабатываются.
        Качество кода:
            Код структурирован, применяется подход модульности (например, микросервисы).
            Используются концепции асинхронного программирования и обработки событий (микросервисы).
        Интеграция и взаимодействие:
            Реализован отдельный сервис, взаимодействующий с брокером сообщений.
            Реализована система уведомлений или аналитики на основе событий.
        Тестирование:
            Код покрыт тестами не меньше 50 процентов.
        Документация и инструкции:
            Предоставлена подробная документация, включая описание интеграции с брокером.
            Указаны инструкции по запуску всех компонентов (включая брокер сообщений).
        Дополнительные технологии:
            Используются дополнительные инструменты, например Docker для контейнеризации.
        Оценка:
            Проект демонстрирует более глубокое владение современными технологиями и подходами к разработке.